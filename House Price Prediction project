#!/usr/bin/env python
# coding: utf-8

# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns
import warnings

# Filter warnings
warnings.filterwarnings('ignore')

# Step 1: Load the dataset
data = pd.read_csv("C:\\Users\\Vikas\\OneDrive\\Documents\\Python Data Files\\kc_house_data.csv")

# Step 2: Select relevant features
features = ['sqft_living', 'bedrooms']
x = data[features]
y = data['price']

# Step 3: Split data into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

# Step 4: Create a pipeline with scaling and linear regression
pipe = Pipeline([
    ('scale', StandardScaler()),
    ('model', LinearRegression())
])

# Step 5: Train the pipeline
pipe.fit(x_train, y_train)

# Step 6: Evaluate the model
y_pred = pipe.predict(x_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Mean Squared Error: {mse}")
print(f"R-Squared: {r2}")

# Step 7: Visualize the data
plt.scatter(x['sqft_living'], y)
plt.xlabel('Square Foot')
plt.ylabel('Price')
plt.title('Relationship between Square Foot and Price')
plt.show()

# Step 8: Deploy the model
new_house = [[2000, 4]]  # Example input for sqft_living and bedrooms
predicted_price = pipe.predict(new_house)
print(f"Predicted Price for new house: {predicted_price}")

